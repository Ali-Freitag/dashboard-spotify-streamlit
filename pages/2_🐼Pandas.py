import pandas as pd
import streamlit as st

st.set_page_config(
    page_title="Artistas Spotify - Pandas",
    page_icon="üé§",
    layout="wide"
)

st.title("Artistas Spotify: uso da biblioteca Pandas")

if 'dataframe_inicial' not in st.session_state:
    inicial = pd.read_csv('artists.csv')
    st.session_state.dataframe_inicial = inicial
    st.success("DataFrame inicial 'artists.csv' carregado com sucesso!")
else:
    st.info('O DataFrame j√° fora carregado anteriormente.')


def limpeza_dados():
    df = st.session_state.dataframe_inicial.copy()
    st.info("Iniciando limpeza de dados...")
    df = df[df['genres'] != '[]']
    df['genres'] = df['genres'].str.replace('[', '')\
        .str.replace(']', '')\
        .str.replace("'", '')\
        .str.replace('"', '')\
        .str.strip()
    if 'id' in df.columns:
        df = df.drop('id', axis=1, inplace=False).reset_index()
        st.success("Limpeza de dados conclu√≠da!")
    else:
        st.warning("Limpeza refeita, mas nada alterado.")
    return df


st.markdown(f"""
Bem-vindo(a) a breve explica√ß√£o do uso do **Pandas**!

Nesta p√°gina, vamos manipular o DataFrame para que mostre somente o conte√∫do releventa para n√≥s.
* **Para conseguir armazenar a limpeza do DataFrame na p√°gina, mas sem modificar o original, vamos utilizar a ferramenta st.session.state.**

    *A ferramenta st.session_state ajuda a resolver um problema central nos script, a reexecu√ß√£o deles, pois o Streamlit reexecuta o script do zero quando h√° uma intera√ß√£o do usu√°rio com qualquer widget do c√≥digo, ou um salvamento.*

    *Basicamente, st.session_state √© como um dicion√°rio Python que persiste entre as reexecu√ß√µes do script. Ele permite que voc√™ armazene e recupere informa√ß√µes ao longo da sess√£o de um usu√°rio.*
            
* **Criar uma fun√ß√£o em Python para automatizar a limpeza do DataFrame**

    * *Removendo os registros que n√£o tenham um g√™nero musical definido:*   
    * *Excluir a coluna "id", pois esta informa√ß√£o n√£o √© necess√°ria para n√≥s.*  
    * *Por fim, retornar na fun√ß√£o os valores copiados de st.session_state.dataframe_inicial, por√©m j√° tratados.*
            
* **O processo descrito acima foi feito com os seguinte trecho de c√≥digo:**
    
        if 'dataframe_inicial' not in st.session_state:
            inicial = pd.read_csv('artists.csv')
            st.session_state.dataframe_inicial = inicial
            st.success("DataFrame inicial 'artists.csv' carregado com sucesso!")

        def limpeza_dados():
            df = st.session_state.dataframe_inicial.copy()
            st.info("Iniciando limpeza de dados...")
            df = df[df['genres'] != '[]']
            df = df.drop('id', axis=1, inplace=False)
            st.success("Limpeza de dados conclu√≠da!")
            return df

Ao final desse processo, o DataFrame est√° pronto para o uso na cria√ß√£o de gr√°ficos.
            
Interessante verificar o c√≥digo do bot√£o:
        
        if st.button("Clique aqui para executar a limpeza de dados"):
            df_limpo = limpeza_dados()

            st.session_state.dataframe_inicial = df_limpo
            st.success("DataFrame limpo salvo no estado da sess√£o!")

**Vale lembrar que o "st.session_state" s√≥ ser√° reiniciado quando a p√°gina for fechada, recarregada ou o servidor for reiniciado, se n√£o, manter√° salvo os dados mesmo quando navegarmos por diferentes p√°ginas, pois o que determina a perman√™ncia dos dados √© a sess√£o do usu√°rio no navegador.**
""")

if st.button("Clique aqui para executar a limpeza de dados"):
    df_limpo = limpeza_dados()

    st.session_state.dataframe_inicial = df_limpo
    st.success("DataFrame limpo salvo no estado da sess√£o!")

st.subheader("Vis√£o Geral sobre os Dados")
st.dataframe(st.session_state.dataframe_inicial)
